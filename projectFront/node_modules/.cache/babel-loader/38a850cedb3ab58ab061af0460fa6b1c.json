{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from '../constants/productConstants';\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/actions/productsAction.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL\n} from '../constants/productConstants';\n\nexport const listProducts = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get('/api/products');\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async(dispatch, getState) => {\n  dispatch({type: PRODUCT_CREATE_REQUEST});\n  const {userSignin:{userInfo}} = getState();\n  try{\n    const {data} = await Axios.post('/api/products', {}, {\n      headers: {Authorization: `Bearer ${userInfo.token}`},\n    });\n    dispatch({type: PRODUCT_CREATE_SUCCESS, payload: data.product});\n  }catch(error) {\n    const message =  error.response && error.response.data.message\n    ? error.response.data.message\n    : error.message;\n    dispatch({type: PRODUCT_CREATE_FAIL, payload:message});\n  }\n};\n\nexport const updateProduct = (product) => async(dispatch, getState) => {\n  dispatch({type: PRODUCT_UPDATE_REQUEST, payload: product});\n  const {userSignin:{userInfo}} =getState();\n  try {\n    const {data} = await Axios.put(`/api/products/${product._id}`, product,{\n      headers: {Authorization: `Bearer ${userInfo.token}`},\n    });\n    dispatch({type: PRODUCT_UPDATE_SUCCESS, payload: data});\n  } catch (error) {\n    const message =  error.response && error.response.data.message\n    ? error.response.data.message\n    : error.message;\n    dispatch({type: PRODUCT_UPDATE_FAIL, error: message})\n    \n  }\n}\n\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo }} = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};"]},"metadata":{},"sourceType":"module"}