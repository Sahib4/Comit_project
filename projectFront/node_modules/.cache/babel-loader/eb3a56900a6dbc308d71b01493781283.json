{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, CART_EMPTY, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../constants/orderConstants\";\nimport Axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }); // console.log(data.order);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","CART_EMPTY","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","Axios","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine","listOrders"],"mappings":"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","sourcesContent":["import { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, CART_EMPTY, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS,ORDER_PAY_REQUEST,ORDER_PAY_FAIL,ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS,ORDER_LIST_REQUEST,ORDER_LIST_SUCCESS,ORDER_LIST_FAIL } from \"../constants/orderConstants\";\nimport Axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\n\n    try{\n        const {userSignin: {userInfo}} = getState();\n        const {data} = await Axios.post('/api/orders', order, {\n            headers: {\n                \n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n       // console.log(data.order);\n        dispatch({type: ORDER_CREATE_SUCCESS, payload:data.order});\n        dispatch({type: CART_EMPTY});\n        localStorage.removeItem('cartItems');\n    } catch(error){\n        dispatch({type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n    }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.get(`/api/orders/${orderId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n    }\n  };\n\n  export const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n    dispatch({type: ORDER_PAY_REQUEST, payload: {order, paymentResult}});\n    const {userSignin: {userInfo},} = getState();\n    try {\n      const {data} = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n        headers: {Authorization: `Bearer ${userInfo.token}`},\n      });\n      dispatch({type: ORDER_PAY_SUCCESS, payload: data});\n    } catch (error){\n        const message =\n         error.response && error.response.data.message\n         ? error.response.data.message\n         : error.message;\n         dispatch({ type: ORDER_PAY_FAIL, payload: message });\n    }\n  };\n\n  export const listOrderMine = () => async(dispatch, getState) =>  {\n    dispatch({type: ORDER_MINE_LIST_REQUEST});\n    const {userSignin: {userInfo}} = getState();\n    try{\n      const {data} = await Axios.get('/api/orders/mine',{\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({type:ORDER_MINE_LIST_SUCCESS, payload: data})\n    }catch(error){\n      const message =\n         error.response && error.response.data.message\n         ? error.response.data.message\n         : error.message;\n      dispatch({type: ORDER_MINE_LIST_FAIL, payload:message});\n    }\n  };\n\n  export const listOrders = () => async(dispatch,getState) => {\n    dispatch({type: ORDER_LIST_REQUEST});\n    const {userSignin:{userInfo},} = getState();\n\n    try {\n      const {data} = await Axios.get('/api/orders', {\n        headers: {Authorization: `Bearer ${userInfo.token}`},\n      });\n      dispatch({type: ORDER_LIST_SUCCESS, payload: data})\n      \n    } catch (error) {\n      const message =\n         error.response && error.response.data.message\n         ? error.response.data.message\n         : error.message;\n      dispatch({type:ORDER_LIST_FAIL, payload:message})\n    }\n\n  } "]},"metadata":{},"sourceType":"module"}