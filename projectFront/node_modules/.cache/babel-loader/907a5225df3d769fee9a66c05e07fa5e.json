{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confrimPassword, setConfrimPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    loading: laodingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confrimPassword) {\n      alert('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 31\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Messagebox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [laodingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Messagebox, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(Messagebox, {\n          variant: \"success\",\n          children: \"Profile Updated Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \" Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Please Enter Name here\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Please Enter email here\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \" Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Please password Name here\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confrimPassword\",\n            children: \"Confrim Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confrimPassword\",\n            type: \"password\",\n            placeholder: \"Please confrim password Name here\",\n            onChange: e => setConfrimPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"CPs7Sa/1X/9RFf7DgVXdLqfvRDQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","Messagebox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confrimPassword","setConfrimPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","laodingUpdate","errorUpdate","success","successUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,wBAA/C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMiB,UAAU,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAaF,UAAnB;AACA,QAAMG,WAAW,GAAGlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAA/B;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BH,WAAhC;AACA,QAAMI,iBAAiB,GAAGtB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACM,iBAAhB,CAArC;AACA,QAAO;AAACH,IAAAA,OAAO,EAAEI,aAAV;AAAyBH,IAAAA,KAAK,EAAEI,WAAhC;AAA6CC,IAAAA,OAAO,EAAEC;AAAtD,MAAuEJ,iBAA9E;AAEA,QAAMK,QAAQ,GAAG5B,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACwB,IAAJ,EAAU;AACNM,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEvB;AAAP,OAAD,CAAR;AACAsB,MAAAA,QAAQ,CAAC1B,WAAW,CAACgB,QAAQ,CAACY,GAAV,CAAZ,CAAR;AACH,KAHD,MAGM;AACFrB,MAAAA,OAAO,CAACa,IAAI,CAACd,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAN,CAAR;AACH;AAEJ,GATQ,EASN,CAACkB,QAAD,EAAWV,QAAQ,CAACY,GAApB,EAAyBR,IAAzB,CATM,CAAT;;AAUA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGrB,QAAQ,KAAKE,eAAhB,EAAkC;AAC9BoB,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,KAFD,MAEK;AACDN,MAAAA,QAAQ,CAACzB,iBAAiB,CAAC;AAACgC,QAAAA,MAAM,EAAEb,IAAI,CAACQ,GAAd;AAAmBtB,QAAAA,IAAnB;AAAyBE,QAAAA,KAAzB;AAAgCE,QAAAA;AAAhC,OAAD,CAAlB,CAAR;AACH;AACJ,GAPD;;AASA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAG,MAAlB;AAAyB,MAAA,QAAQ,EAAEmB,aAAnC;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAKQX,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAEPC,KAAK,gBAAG,QAAC,UAAD;AAAY,QAAA,OAAO,EAAG,QAAtB;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAEL;AAAA,mBACCG,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADlB,EAECC,WAAW,iBAAK,QAAC,UAAD;AAAY,UAAA,OAAO,EAAG,QAAtB;AAAA,oBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFjB,EAGCE,aAAa,iBAAI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB,eAKI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAG,MAAZ;AAAmB,YAAA,IAAI,EAAG,MAA1B;AAAiC,YAAA,WAAW,EAAG,wBAA/C;AAAwE,YAAA,KAAK,EAAEnB,IAA/E;AAAqF,YAAA,QAAQ,EAAGwB,CAAD,IAAOvB,OAAO,CAACuB,CAAC,CAACI,MAAF,CAASC,KAAV;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAG,OAAZ;AAAoB,YAAA,IAAI,EAAG,OAA3B;AAAmC,YAAA,WAAW,EAAG,yBAAjD;AAA2E,YAAA,KAAK,EAAE3B,KAAlF;AAAyF,YAAA,QAAQ,EAAGsB,CAAD,IAAOrB,QAAQ,CAACqB,CAAC,CAACI,MAAF,CAASC,KAAV;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAG,UAAZ;AAAuB,YAAA,IAAI,EAAG,UAA9B;AAAyC,YAAA,WAAW,EAAG,2BAAvD;AAAmF,YAAA,QAAQ,EAAKL,CAAD,IAAOnB,WAAW,CAACmB,CAAC,CAACI,MAAF,CAASC,KAAV;AAAjH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAiBI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAG,iBAAZ;AAA8B,YAAA,IAAI,EAAG,UAArC;AAAgD,YAAA,WAAW,EAAG,mCAA9D;AAAkG,YAAA,QAAQ,EAAKL,CAAD,IAAOjB,kBAAkB,CAACiB,CAAC,CAACI,MAAF,CAASC,KAAV;AAAvI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAqBI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAG,SAApB;AAA8B,YAAA,IAAI,EAAG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA,sBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GA3EuB9B,a;UAMDN,W,EAECA,W,EAEMA,W,EAGTD,W;;;KAbGO,a","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nexport default function ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confrimPassword, setConfrimPassword] = useState('');\n\n    const userSignin = useSelector(state => state.userSignin);\n    const {userInfo} = userSignin;\n    const userDetails = useSelector(state => state.userDetails);\n    const {loading, error, user} =  userDetails;\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const  {loading: laodingUpdate, error: errorUpdate, success: successUpdate} = userUpdateProfile\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if(!user) {\n            dispatch({type: USER_UPDATE_PROFILE_RESET});\n            dispatch(detailsUser(userInfo._id));   \n        }else {\n            setName(user.name);\n            setEmail(user.email);\n        }\n         \n    }, [dispatch, userInfo._id, user]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if(password !== confrimPassword ) {\n            alert('Password do not match')\n        }else{ \n            dispatch(updateUserProfile({userId: user._id, name, email, password}));\n        }\n    }\n\n    return (\n        <div>\n            <form className = \"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {\n                    loading ? <LoadingBox></LoadingBox>\n                    :\n                    error ? <Messagebox variant = \"danger\">{error}</Messagebox>\n                    :\n                    <>\n                    {laodingUpdate && <LoadingBox></LoadingBox>}\n                    {errorUpdate && (<Messagebox variant = \"danger\">{errorUpdate}</Messagebox>)}\n                    {successUpdate && <Messagebox variant = \"success\">Profile Updated Successfully</Messagebox>}\n\n                        <div>\n                            <label htmlFor = \"name\"> Name</label>\n                            <input id = \"name\" type = \"text\" placeholder = \"Please Enter Name here\" value={name} onChange={(e) => setName(e.target.value)}></input>\n                        </div>\n                        <div>\n                            <label htmlFor = \"email\"> Email</label>\n                            <input id = \"email\" type = \"email\" placeholder = \"Please Enter email here\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                        </div>\n                        <div>\n                            <label htmlFor = \"password\"> Password</label>\n                            <input id = \"password\" type = \"password\" placeholder = \"Please password Name here\" onChange = {(e) => setPassword(e.target.value)}></input>\n                        </div>\n                        <div>\n                            <label htmlFor = \"confrimPassword\">Confrim Password</label>\n                            <input id = \"confrimPassword\" type = \"password\" placeholder = \"Please confrim password Name here\" onChange = {(e) => setConfrimPassword(e.target.value)}></input>\n                        </div>\n                        <div>\n                            <label />\n                            <button className = \"primary\" type = \"submit\">Update</button>\n                        </div>\n                    </>\n\n                }\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}