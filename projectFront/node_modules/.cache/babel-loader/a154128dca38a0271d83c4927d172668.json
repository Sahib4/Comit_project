{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/OrderScreenList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrders } from '../actions/orderActions';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\nexport default function OrderScreenList(props) {\n  _s();\n\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listOrders());\n  });\n\n  const deleteHandler = order => {//todo\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Messagebox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt.substring(0, 10) : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"small\",\n              onClick: () => props.history.push(`/order/${order._id}`),\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"small\",\n              onclick: () => deleteHandler(order),\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderScreenList, \"TuKCqfR1W0cpNJo7Axkrn1fYWe8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OrderScreenList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreenList\");","map":{"version":3,"sources":["/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/OrderScreenList.js"],"names":["React","useEffect","useDispatch","useSelector","listOrders","LoadingBox","Messagebox","OrderScreenList","props","orderList","state","loading","error","orders","dispatch","deleteHandler","order","map","_id","user","name","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { listOrders } from '../actions/orderActions';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\n\nexport default function OrderScreenList(props) {\n\n    const orderList = useSelector(state => state.orderList)\n    const {loading, error, orders} = orderList;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(listOrders());\n    }, );\n\n    const deleteHandler = (order) => {\n        //todo\n    } \n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading ? <LoadingBox></LoadingBox> : \n                error? <Messagebox variant = \"danger\">{error}</Messagebox> :\n\n            (\n                <table className = \"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>Date</th>\n                            <th>Total</th>\n                            <th>Delivered</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key = {order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user.name}</td>\n                                <td>{order.createdAt.substring(0,10)}</td>\n                                <td>{order.totalPrice.toFixed(2)}</td>\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0,10): 'No'}</td>\n                                <td>\n                                    <button type = \"button\" className = \"small\" onClick = {() => props.history.push(`/order/${order._id}`)}>Details</button>\n                                    <button type=\"button\" className=\"small\" onclick={() => deleteHandler(order)}> Delete </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}