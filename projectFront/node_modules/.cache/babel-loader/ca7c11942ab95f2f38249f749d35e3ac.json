{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsProduct, updateProduct } from '../actions/productsAction';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport Axios from 'axios';\nexport default function ProductEditScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/productlist');\n    }\n\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUplaod, setErrorUplaod] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    ;\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUplaod(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Messagebox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Messagebox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Enter Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageFile\",\n            children: \"Image File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imageFile\",\n            label: \"choose image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 39\n          }, this), errorUplaod && /*#__PURE__*/_jsxDEV(Messagebox, {\n            variant: \"danger\",\n            children: errorUplaod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter Count In Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"XgVB8CMrY7Pn01EOO/5XPl6BaZs=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/sahib_narang/Documents/Ecommerce website /project/projectFront/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","detailsProduct","updateProduct","LoadingBox","Messagebox","PRODUCT_UPDATE_RESET","Axios","ProductEditScreen","props","productId","match","params","id","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUplaod","setErrorUplaod","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {detailsProduct, updateProduct} from '../actions/productsAction';\nimport LoadingBox from '../componenets/LoadingBox';\nimport Messagebox from '../componenets/Messagebox';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport Axios from 'axios';\n\nexport default function ProductEditScreen(props) {\n    const productId = props.match.params.id;\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [brand, setBrand] = useState('');\n    const [description, setDescription] = useState('');\n\n    const productDetails = useSelector(state => state.productDetails);\n    const {loading, error, product} = productDetails;\n\n    const productUpdate = useSelector(state => state.productUpdate);\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate;\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (successUpdate) {\n            props.history.push('/productlist');\n          }\n          if (!product || product._id !== productId || successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            dispatch(detailsProduct(productId));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setImage(product.image);\n            setCategory(product.category);\n            setCountInStock(product.countInStock);\n            setBrand(product.brand);\n            setDescription(product.description);\n        }\n        \n    }, [product, dispatch, productId, successUpdate, props.history]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateProduct({_id: productId, name, price, image, category,brand, countInStock,description}));\n      };\n      const [loadingUpload, setLoadingUpload] = useState(false);\n      const [errorUplaod, setErrorUplaod] = useState(''); \n\n      const userSignin = useSelector(state => state.userSignin);\n      const {userInfo} = userSignin;\n\n      const uploadFileHandler = async (e) => {\n          const file = e.target.files[0];\n          const bodyFormData = new FormData();\n          bodyFormData.append('image', file);;\n          setLoadingUpload(true);\n          try {\n              const {data} = await Axios.post('/api/uploads', bodyFormData,{\n                  headers: {'Content-Type':'multipart/form-data', Authorization: `Bearer ${userInfo.token}`},\n              })\n              setImage(data);\n              setLoadingUpload(false);\n          } catch (error) {\n              setErrorUplaod(error.message);\n              setLoadingUpload(false);\n          }\n      }\n\n    return (\n        <div>\n            <form className = \"form\" onSubmit={submitHandler}>\n                <div><h1>Edit Product {productId}</h1></div>\n\n                {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <Messagebox variant=\"danger\">{errorUpdate}</Messagebox>}\n\n                {loading ? <LoadingBox></LoadingBox>\n                    :\n                error ? <Messagebox variant=\"danger\">{error}</Messagebox>\n                    :\n                <>\n                <div>\n                    <label htmlFor = \"name\">Name</label>\n                    <input id = \"name\" type = \"text\" placeholder = \"Enter Name\" value = {name} onChange = {(e) => setName(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor = \"price\">Price</label>\n                    <input id = \"price\" type = \"text\" placeholder = \"Enter Price\" value = {price} onChange = {(e) => setPrice(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor = \"image\">Image</label>\n                    <input id = \"image\" type = \"text\" placeholder = \"Enter Image\" value = {image} onChange = {(e) => setImage(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"imageFile\">Image File</label>\n                    <input type=\"file\" id=\"imageFile\" label =\"choose image\" onChange={uploadFileHandler}></input>\n                    {loadingUpload && <LoadingBox></LoadingBox>}\n                    {errorUplaod && <Messagebox variant = \"danger\">{errorUplaod}</Messagebox>}\n                </div>\n                <div>\n                    <label htmlFor = \"category\">Category</label>\n                    <input id = \"category\" type = \"text\" placeholder = \"Enter category\" value = {category} onChange = {(e) => setCategory(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor = \"countInStock\">Count In Stock</label>\n                    <input id = \"countInStock\" type = \"text\" placeholder = \"Enter Count In Stock\" value = {countInStock} onChange = {(e) => setCountInStock(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor = \"brand\">Brand</label>\n                    <input id = \"brand\" type = \"text\" placeholder = \"Enter brand\" value = {brand} onChange = {(e) => setBrand(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor = \"description\">Description</label>\n                    <textarea id = \"description\" rows = \"3\" type = \"text\" placeholder = \"Enter description\" value = {description} onChange = {(e) => setDescription(e.target.value)}></textarea>\n                </div>\n                <div>\n                    <label></label>\n                    <button className = \"primary\" type = \"submit\" >Update</button>\n                </div>\n                </>}\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}